name: Build and Push Docker Image

on:
  push:
    branches:
      - "17.0"
      - main

env:
  DOCKER_IMAGE: rrjorgegz/hidraulica
  DOCKER_TAG: "17.0"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        
      - name: Obtener última versión
        id: version
        run: |
          # Busca el último tag que coincida con "17.0.*"
          LATEST_TAG=$(git tag --list "${{ env.DOCKER_TAG }}.*" --sort=-v:refname | head -n 1)
          
          if [ -z "$LATEST_TAG" ]; then
            # Si no hay tags, empezar en 17.0.0
            NEW_VERSION="${{ env.DOCKER_TAG }}.0"
          else
            # Extrae el último número de versión (ej: 17.0.2 -> 2)
            LAST_PATCH=$(echo "$LATEST_TAG" | awk -F. '{print $3}')
            NEW_PATCH=$((LAST_PATCH + 1))
            NEW_VERSION="${{ env.DOCKER_TAG }}.$NEW_PATCH"
          fi

          echo "Nueva versión: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=raw,value=${{ steps.version.outputs.new_version }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            ODOO_VERSION=17.0
            ODOO_RELEASE=20250311 